"""init

Revision ID: 64fc4e427bc4
Revises:
Create Date: 2024-10-12 15:58:45.288407

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import pgvector

# revision identifiers, used by Alembic.
revision: str = "64fc4e427bc4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=256), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "job_seekers",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("email", sa.String(length=256), nullable=True),
        sa.Column("phone", sa.String(length=15), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
    )
    op.create_index(op.f("ix_job_seekers_email"), "job_seekers", ["email"], unique=True)
    op.create_index(
        op.f("ix_job_seekers_telegram_id"), "job_seekers", ["telegram_id"], unique=False
    )
    op.create_table(
        "resumes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("role", sa.String(length=128), nullable=False),
        sa.Column("seniority", sa.String(length=128), nullable=False),
        sa.Column("key_skills", sa.ARRAY(sa.String(length=128)), nullable=True),
        sa.Column("languages", sa.ARRAY(sa.String(length=64)), nullable=True),
        sa.Column("education", sa.Text(), nullable=True),
        sa.Column("embedding", pgvector.sqlalchemy.VECTOR(dim=1024), nullable=True),
        sa.Column("job_seeker_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["job_seeker_id"],
            ["job_seekers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_resumes_role"), "resumes", ["role"], unique=False)
    op.create_index(
        op.f("ix_resumes_seniority"), "resumes", ["seniority"], unique=False
    )
    op.create_table(
        "vacancies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("requirements", sa.ARRAY(sa.String(length=128)), nullable=True),
        sa.Column("languages", sa.ARRAY(sa.String(length=64)), nullable=True),
        sa.Column("currency", sa.String(length=64), nullable=True),
        sa.Column("country", sa.String(length=128), nullable=True),
        sa.Column("job_type", sa.String(length=64), nullable=True),
        sa.Column("embedding", pgvector.sqlalchemy.VECTOR(dim=1024), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vacancies")
    op.drop_index(op.f("ix_resumes_seniority"), table_name="resumes")
    op.drop_index(op.f("ix_resumes_role"), table_name="resumes")
    op.drop_table("resumes")
    op.drop_index(op.f("ix_job_seekers_telegram_id"), table_name="job_seekers")
    op.drop_index(op.f("ix_job_seekers_email"), table_name="job_seekers")
    op.drop_table("job_seekers")
    op.drop_table("companies")
    # ### end Alembic commands ###
